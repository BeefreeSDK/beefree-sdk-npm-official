name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - v*
  pull_request:
    branches:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: build
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node Version ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: ${{ matrix.node-version }}
          scope: '@mailupinc'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v2
        name: Cache node_modules
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - uses: actions/cache@v2
        name: Cache Jest cache
        id: cache-jest-cache
        with:
          path: .jest-cache
          key: ${{ runner.os }}-${{ matrix.node-version }}-jest        

      - name: Install Dependencies
        run: yarn --frozen-lockfile
        if: steps.cache-yarn-cache.outputs.cache-hit != 'true' || steps.cache-node-modules.outputs.cache-hit != 'true'
      
      - name: Unit tests
        run: yarn test --all --cacheDirectory .jest-cache --coverage --watchAll false
      - uses: vebr/jest-lcov-reporter@v0.2.0
        # Print comment only on 1 build and PR
        if: matrix.node-version == '12.x' && github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}  

  release:
    runs-on: ubuntu-latest
    environment:
      name: release
    if: contains(github.ref, 'tag')
    needs: build
    steps:
    - uses: actions/checkout@v2

    - name: Use Node Version 12.x
      uses: actions/setup-node@v1
      with:
        registry-url: 'https://registry.npmjs.org'
        node-version: '12.x'
        scope: '@mailupinc'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Dependencies
      run: yarn --frozen-lockfile
      if: steps.cache-yarn-cache.outputs.cache-hit != 'true' || steps.cache-node-modules.outputs.cache-hit != 'true'

    - name: Build package
      run: yarn build     

    - name: Publish package
      run: npm publish --production
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
